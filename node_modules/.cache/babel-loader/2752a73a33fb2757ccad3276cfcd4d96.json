{"ast":null,"code":"var _jsxFileName = \"/Users/stuartbloxham/Code./interviews/interview-test-master/app-standalone/src/App/components/Game/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Board from \"../Board\";\nimport Leaderboard from \"../Leaderboard\";\nimport PlayersForm from \"../../PlayersForm\";\n/**\n * A game of tic-tac-toe.\n */\n\nconst Game = () => {\n  const [gameHistory, setGameHistory] = useState([{\n    squares: Array(9).fill(null)\n  }]); // Start of game\n\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXisNext] = useState(true);\n  const [players, setPlayers] = useState({\n    player_1: \"X\",\n    player_2: \"O\"\n  });\n  useEffect(() => {\n    console.log(\"players\", players);\n  }, [players]);\n\n  const getPlayerNames = namesObj => {\n    setPlayers(namesObj);\n  };\n\n  const calculateWinner = squares => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        // console.log(lines[i], \"lines[i]\");\n        // console.log(squares[a]);\n        return {\n          winningPlayer: squares[a],\n          winningLine: [a, b, c]\n        };\n      }\n    }\n\n    return null;\n  };\n\n  const handleClick = i => {\n    const history = gameHistory.slice(0, stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = xIsNext ? \"X\" : \"O\";\n    setGameHistory([...history, {\n      squares\n    }]);\n    setStepNumber(history.length);\n    setXisNext(!xIsNext);\n  };\n\n  const jumpTo = step => {\n    setStepNumber(step);\n    setXisNext(step % 2 === 0);\n  };\n\n  const current = gameHistory[stepNumber];\n  const winner = calculateWinner(current.squares);\n  let winningLine = [];\n\n  if (winner) {\n    winningLine = winner.winningLine;\n  }\n\n  const moves = gameHistory.map((step, move) => {\n    const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: move,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => jumpTo(move),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, desc));\n  });\n  let status;\n\n  if (winner) {\n    status = \"Winner: \" + winner.winningPlayer;\n  } else {\n    status = \"Next player: \" + (xIsNext ? players.player_1 : players.player_2);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PlayersForm, {\n    getPlayerNames: getPlayerNames,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Board, {\n    squares: current.squares,\n    onClick: i => handleClick(i),\n    winningLine: winningLine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, status), /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, moves)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Leaderboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Game;","map":{"version":3,"sources":["/Users/stuartbloxham/Code./interviews/interview-test-master/app-standalone/src/App/components/Game/index.js"],"names":["React","useState","useEffect","Board","Leaderboard","PlayersForm","Game","gameHistory","setGameHistory","squares","Array","fill","stepNumber","setStepNumber","xIsNext","setXisNext","players","setPlayers","player_1","player_2","console","log","getPlayerNames","namesObj","calculateWinner","lines","i","length","a","b","c","winningPlayer","winningLine","handleClick","history","slice","current","jumpTo","step","winner","moves","map","move","desc","status"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Board from \"../Board\";\nimport Leaderboard from \"../Leaderboard\";\nimport PlayersForm from \"../../PlayersForm\";\n\n/**\n * A game of tic-tac-toe.\n */\nconst Game = () => {\n  const [gameHistory, setGameHistory] = useState([\n    { squares: Array(9).fill(null) },\n  ]); // Start of game\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXisNext] = useState(true);\n  const [players, setPlayers] = useState({ player_1: \"X\", player_2: \"O\" });\n\n  useEffect(() => {\n    console.log(\"players\", players);\n  }, [players]);\n\n  const getPlayerNames = (namesObj) => {\n    setPlayers(namesObj);\n  };\n\n  const calculateWinner = (squares) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        // console.log(lines[i], \"lines[i]\");\n        // console.log(squares[a]);\n        return { winningPlayer: squares[a], winningLine: [a, b, c] };\n      }\n    }\n\n    return null;\n  };\n\n  const handleClick = (i) => {\n    const history = gameHistory.slice(0, stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = xIsNext ? \"X\" : \"O\";\n\n    setGameHistory([...history, { squares }]);\n    setStepNumber(history.length);\n    setXisNext(!xIsNext);\n  };\n\n  const jumpTo = (step) => {\n    setStepNumber(step);\n    setXisNext(step % 2 === 0);\n  };\n\n  const current = gameHistory[stepNumber];\n  const winner = calculateWinner(current.squares);\n  let winningLine = [];\n  if (winner) {\n    winningLine = winner.winningLine;\n  }\n\n  const moves = gameHistory.map((step, move) => {\n    const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{desc}</button>\n      </li>\n    );\n  });\n\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner.winningPlayer;\n  } else {\n    status = \"Next player: \" + (xIsNext ? players.player_1 : players.player_2);\n  }\n\n  return (\n    <div>\n      <PlayersForm getPlayerNames={getPlayerNames} />\n\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => handleClick(i)}\n            winningLine={winningLine}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n        <div className=\"game-info\">\n          <Leaderboard />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}