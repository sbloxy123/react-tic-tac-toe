{"ast":null,"code":"var _jsxFileName = \"/Users/stuartbloxham/Code./interviews/interview-test-master/app-standalone/src/App/components/Board/index.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport Square from '../Square';\n/**\n * A board for the game of tic-tac-toe.  A 3x3 square.\n */\n\nconst Board = ({\n  onClick,\n  squares\n}) => {\n  const renderSquare = i => /*#__PURE__*/React.createElement(Square, {\n    value: squares[i],\n    onClick: () => onClick(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, renderSquare(6), renderSquare(7), renderSquare(8)));\n};\n\nBoard.propTypes = {\n  /**\n   *  The 1..9 array of squares to display\n   */\n  squares: PropTypes.array.isRequired,\n\n  /**\n   *  The handler for when a square is clicked\n   */\n  onClick: PropTypes.func\n};\nexport default Board;","map":{"version":3,"sources":["/Users/stuartbloxham/Code./interviews/interview-test-master/app-standalone/src/App/components/Board/index.js"],"names":["React","PropTypes","Square","Board","onClick","squares","renderSquare","i","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AAEA;;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAwB;AAClC,QAAMC,YAAY,GAAIC,CAAD,iBACjB,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEF,OAAO,CAACE,CAAD,CADlB;AAEI,IAAA,OAAO,EAAE,MAAMH,OAAO,CAACG,CAAD,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,YAAY,CAAC,CAAD,CADf,EAEGA,YAAY,CAAC,CAAD,CAFf,EAGGA,YAAY,CAAC,CAAD,CAHf,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,YAAY,CAAC,CAAD,CADf,EAEGA,YAAY,CAAC,CAAD,CAFf,EAGGA,YAAY,CAAC,CAAD,CAHf,CANJ,eAWI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,YAAY,CAAC,CAAD,CADf,EAEGA,YAAY,CAAC,CAAD,CAFf,EAGGA,YAAY,CAAC,CAAD,CAHf,CAXJ,CADJ;AAmBH,CA3BD;;AA6BAH,KAAK,CAACK,SAAN,GAAkB;AACd;;;AAGAH,EAAAA,OAAO,EAAEJ,SAAS,CAACQ,KAAV,CAAgBC,UAJX;;AAMd;;;AAGAN,EAAAA,OAAO,EAAEH,SAAS,CAACU;AATL,CAAlB;AAYA,eAAeR,KAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport Square from '../Square';\n\n/**\n * A board for the game of tic-tac-toe.  A 3x3 square.\n */\nconst Board = ({onClick, squares}) => {\n    const renderSquare = (i) => (\n        <Square\n            value={squares[i]}\n            onClick={() => onClick(i)}\n        />\n    );\n\n    return (\n        <div>\n            <div className=\"board-row\">\n              {renderSquare(0)}\n              {renderSquare(1)}\n              {renderSquare(2)}\n            </div>\n            <div className=\"board-row\">\n              {renderSquare(3)}\n              {renderSquare(4)}\n              {renderSquare(5)}\n            </div>\n            <div className=\"board-row\">\n              {renderSquare(6)}\n              {renderSquare(7)}\n              {renderSquare(8)}\n            </div>\n        </div>\n    )\n};\n\nBoard.propTypes = {\n    /**\n     *  The 1..9 array of squares to display\n     */\n    squares: PropTypes.array.isRequired,\n\n    /**\n     *  The handler for when a square is clicked\n     */\n    onClick: PropTypes.func\n};\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}